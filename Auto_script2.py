import random
import json


# 직접식별자 pool 기반 태그
direct_pools = {
  "[NAME]": [
    "김서하",
    "홍길동",
    "박유진",
    "이민재",
    "최강우",
    "서지후",
    "한예린",
    "장도윤",
    "오하늘",
    "정하나",
    "이수호",
    "백하진",
    "노지민",
    "주민정",
    "유다온",
    "류지후",
    "조유리",
    "한지민",
    "윤동주",
    "송하늘",
    "이소연",
    "정유미",
    "박보검",
    "김태희",
    "이병헌",
    "이정은",
    "이성민",
    "유아인",
    "김희애",
    "박서준",
    "장현우",
    "문수빈",
    "최연우",
    "한지훈",
    "김도윤",
    "이하늘",
    "최지훈",
    "강나연",
    "백승우",
    "이한결",
    "윤하린",
    "김준서",
    "정예진",
    "황도현",
    "박지민",
    "노시현",
    "문세윤",
    "장한빛",
    "송은채",
    "오민우",
    "서윤재",
    "문지후",
    "박서윤",
    "정가온",
    "이해솔",
    "김나율",
    "조윤호",
    "유세은",
    "배정우",
    "오혜림",
    "안지우",
    "권다인",
    "하예준",
    "강지안",
    "전민준",
    "윤소윤",
    "고지원",
    "백지우",
    "신유찬",
    "최서하",
    "이도현",
    "윤지안",
    "김지유",
    "정태현",
    "박시우",
    "조나윤",
    "임하늘",
    "장민석",
    "홍유라",
    "서우진",
    "고지윤",
    "한예린",
    "최지원",
    "배하늘",
    "문건우",
    "전지현",
    "백하진",
    "이서율",
    "윤서하",
    "노지후",
    "황유정",
    "송진우",
    "김태민",
    "오지민",
    "심지수",
    "하승연",
    "정하윤",
    "박가영",
    "최은우",
    "강태윤"
  ],
  "[RRN]": [
    "861163-1278166",
    "829209-4694829",
    "716394-2343923",
    "943625-2650440",
    "887825-3950777",
    "884216-4092260",
    "985309-3839835",
    "948863-2708313",
    "926371-3849669",
    "823107-1892194",
    "754107-2396169",
    "774864-2380743",
    "828383-2699474",
    "905961-2102109",
    "811386-1925129",
    "761354-3159177",
    "732311-2926312",
    "792111-2943686",
    "969552-2960203",
    "962107-4568143",
    "922200-2784906",
    "965939-3103557",
    "870923-1853689",
    "923298-2199089",
    "834907-4249311",
    "949211-2740638",
    "746959-4264829",
    "926957-3442655",
    "964345-2139269",
    "845720-2823435",
    "820991-1986888",
    "808042-3245647",
    "966724-4409640",
    "736352-4396059",
    "972936-3834418",
    "706350-1905922",
    "949536-1493403",
    "791719-2043021",
    "916305-2547311",
    "796373-3312923",
    "898943-4361882",
    "719203-4898984",
    "903859-2077175",
    "956861-4143653",
    "872687-1618245",
    "880589-1878342",
    "882668-1248010",
    "753693-1485713",
    "990275-3114946",
    "851536-4650550",
    "884055-2580773",
    "727140-1783042",
    "983218-2584134",
    "791094-2001334",
    "850125-3474708",
    "832924-1221937",
    "767189-1147145",
    "798395-4943220",
    "930411-1900677",
    "965886-4182633",
    "954652-2778595",
    "711800-4485385",
    "868659-3232673",
    "807128-2626207",
    "750533-2799562",
    "883921-4988730",
    "763876-3621187",
    "704431-4638674",
    "975873-2445296",
    "924875-1569986",
    "707048-1487259",
    "824139-4133927",
    "717062-1052679",
    "871269-2874327",
    "973052-4657539",
    "882883-1280705",
    "917761-4179925",
    "950351-3368600",
    "877565-4910520",
    "875426-3816553",
    "741635-4324941",
    "907360-2321478",
    "894863-2658904",
    "737798-4348408",
    "774101-4971223",
    "892104-1163368",
    "940252-4150981",
    "872684-3489642",
    "965216-2250398",
    "946766-1957721",
    "753660-2488482",
    "705263-3726183",
    "909363-2064856",
    "744380-1764146",
    "928646-3679665",
    "819769-4611270",
    "822585-1311353",
    "728396-1121978",
    "789052-2141935",
    "755984-2392100"
  ],
  "[MEDICAL_ID]": [
    "MR-00112233",
    "8249813",
    "HSP-55588822",
    "ID-77889900",
    "MED-334455",
    "HSP-112233",
    "MR-99988877",
    "MID-223344",
    "MR-00011122",
    "MID-556677",
    "HSP-001122",
    "MR-445566",
    "ID-889900",
    "MID-667788",
    "MR-123456",
    "HSP-999000",
    "MID-101112",
    "MR-654321",
    "HSP-202122",
    "ID-303132",
    "MR-333444",
    "MID-505152",
    "MR-606162",
    "ID-707172",
    "MR-888999",
    "HSP-777888",
    "MED-909192",
    "MID-111213",
    "MR-141516",
    "ID-171819",
    "HSP-202122",
    "MID-232425",
    "MR-262728",
    "ID-293031",
    "MID-323334",
    "HSP-353637",
    "MID-383940",
    "MR-414243",
    "ID-444546",
    "MED-474849",
    "HSP-505152",
    "MR-535455",
    "MID-565758",
    "ID-596061",
    "MR-626364",
    "MID-656667",
    "HSP-686970",
    "MR-717273",
    "ID-747576",
    "MED-777879",
    "MR-568994",
    "MR-297557",
    "MR-337099",
    "MR-484352",
    "HSP-977147",
    "HSP-362911",
    "HSP-407093",
    "HSP-498496",
    "MID-717940",
    "MID-815981",
    "MID-667196",
    "MID-130267",
    "ID-539230",
    "ID-530705",
    "ID-269370",
    "ID-402516",
    "MED-380574",
    "MED-559767",
    "MED-892338",
    "MED-599384",
    "MR-914376",
    "MR-469626",
    "MR-329273",
    "MR-396979",
    "MR-189359",
    "MR-222381",
    "HSP-798921",
    "HSP-642414",
    "HSP-717826",
    "HSP-113233",
    "HSP-794956",
    "HSP-225894",
    "MID-276207",
    "MID-901231",
    "MID-207129",
    "MID-511782",
    "MID-651917",
    "MID-424062",
    "ID-399774",
    "ID-187033",
    "ID-702235",
    "ID-192581",
    "ID-404826",
    "ID-631062",
    "MED-409637",
    "MED-406610",
    "MED-653329",
    "MED-687818",
    "MED-137656",
    "MED-718333"
  ],
  "[EMAIL]": [
    "abc@hospital.com",
    "doc.kim@med.kr",
    "nurse_lee@clinic.org",
    "lee.seo@medcenter.kr",
    "kimhj@hos.net",
    "choi.md@healthcare.org",
    "yangdoc@clinic.kr",
    "dental.park@med.org",
    "hwanggs@hospital.net",
    "shin.dr@mednet.kr",
    "naeyoon@hosp.com",
    "admin@carecenter.org",
    "dojang@doc.kr",
    "rheeha@medclinic.com",
    "info@hospmail.kr",
    "jo.min@medmail.org",
    "upark@hos.net",
    "headnurse@med.org",
    "info@clinic.kr",
    "erteam@medcenter.net",
    "careline@hosp.kr",
    "docchan@med.net",
    "testpatient@clinic.com",
    "neuro@med.org",
    "kimdoc@hos.kr",
    "hanseul@health.org",
    "dr.park@med.kr",
    "park.ch@mednet.net",
    "moonlee@hosp.org",
    "hjcho@hospital.net",
    "medic.yeo@clinic.org",
    "docna@health.kr",
    "sonmj@hos.org",
    "yoo.nurse@med.kr",
    "centerinfo@clinic.net",
    "lee.min@clinic.org",
    "kimjeong@hos.net",
    "cho.doctor@med.org",
    "jungsa@hosp.kr",
    "seo.admin@hospital.com",
    "er.kim@medcenter.kr",
    "hyeonju@clinic.kr",
    "ohye@med.org",
    "jang.se@hospital.net",
    "yoo.min@health.org",
    "support@hosmail.com",
    "lab@medcenter.kr",
    "moonhc@clinic.net",
    "contact@hos.kr",
    "staff@med.org",
    "user848@clinic.org",
    "user141@clinic.org",
    "user793@clinic.org",
    "user225@clinic.org",
    "user297@clinic.org",
    "user109@hospital.com",
    "user235@hospital.com",
    "user473@hospital.com",
    "user525@hospital.com",
    "user908@hospital.com",
    "user434@med.net",
    "user697@med.net",
    "user603@med.net",
    "user684@med.net",
    "user535@med.net",
    "user315@health.kr",
    "user300@health.kr",
    "user880@health.kr",
    "user954@health.kr",
    "user644@health.kr",
    "contact981@clinic.org",
    "contact479@clinic.org",
    "contact734@clinic.org",
    "contact436@clinic.org",
    "contact245@clinic.org",
    "contact860@clinic.org",
    "contact937@clinic.org",
    "contact330@clinic.org",
    "contact514@clinic.org",
    "contact956@clinic.org",
    "contact958@hospital.com",
    "contact825@hospital.com",
    "contact334@hospital.com",
    "contact136@hospital.com",
    "contact526@hospital.com",
    "contact741@hospital.com",
    "contact316@hospital.com",
    "contact235@hospital.com",
    "contact836@hospital.com",
    "contact312@hospital.com",
    "contact502@med.net",
    "contact159@med.net",
    "contact286@med.net",
    "contact115@med.net",
    "contact784@med.net",
    "contact793@med.net",
    "contact173@med.net",
    "contact738@med.net",
    "contact130@med.net",
    "contact509@med.net"
  ],
  "[ACCOUNT_ID]": [
    "489-36-239528",
    "993-64-187719",
    "880-17-541004",
    "833-36-704781",
    "459-73-310255",
    "327-31-340247",
    "870-97-890511",
    "476-61-454539",
    "193-90-336426",
    "463-72-889228",
    "275-15-329539",
    "657-38-147803",
    "715-26-406873",
    "376-46-438833",
    "930-76-739366",
    "240-34-352845",
    "333-14-852522",
    "506-99-304971",
    "115-93-145645",
    "747-21-727848",
    "136-31-521757",
    "913-46-270624",
    "542-95-632604",
    "971-34-446952",
    "198-34-781466",
    "303-89-875380",
    "492-83-866668",
    "750-75-460091",
    "920-67-282970",
    "860-91-262210",
    "197-78-707758",
    "885-63-315589",
    "530-65-246183",
    "791-44-182692",
    "424-24-186561",
    "342-97-873667",
    "651-58-246058",
    "502-22-174700",
    "251-80-424950",
    "168-44-596885",
    "131-96-742710",
    "615-37-623840",
    "798-70-109036",
    "393-94-353122",
    "155-12-896623",
    "598-75-897154",
    "169-59-699258",
    "943-95-603557",
    "875-30-659946",
    "756-14-398144",
    "517-85-370685",
    "514-50-189767",
    "787-64-196978",
    "763-75-897380",
    "432-47-749769",
    "449-94-222265",
    "507-68-353330",
    "647-78-737082",
    "638-16-913376",
    "451-47-999848",
    "205-76-963779",
    "854-64-343012",
    "297-95-277173",
    "946-85-148051",
    "264-67-983825",
    "661-90-739892",
    "284-91-357031",
    "266-16-730628",
    "829-21-146362",
    "653-95-585906",
    "656-63-563240",
    "513-38-819732",
    "940-35-175366",
    "800-60-866931",
    "740-81-737754",
    "667-29-140532",
    "259-22-991988",
    "214-11-849902",
    "330-30-783117",
    "426-95-511940",
    "419-22-733580",
    "971-41-441604",
    "249-87-487035",
    "889-52-793453",
    "446-28-939366",
    "432-58-534971",
    "361-88-971632",
    "411-51-860455",
    "479-60-895079",
    "692-66-269966",
    "879-45-434910",
    "790-89-938006",
    "918-27-131215",
    "733-57-577786",
    "200-21-210553",
    "561-92-971645",
    "384-61-882487",
    "643-58-803149",
    "635-66-402419",
    "112-27-520404"
  ]
}
# 간접식별자 pool
indirect_candidates = {
    "[AGE]": [
    "30세",
    "31세",
    "32세",
    "33세",
    "34세",
    "35세",
    "36세",
    "37세",
    "38세",
    "39세",
    "40세",
    "41세",
    "42세",
    "43세",
    "44세",
    "45세",
    "46세",
    "47세",
    "48세",
    "49세",
    "50세",
    "51세",
    "52세",
    "53세",
    "54세",
    "55세",
    "56세",
    "57세",
    "58세",
    "59세",
    "60세",
    "61세",
    "62세",
    "63세",
    "64세",
    "65세",
    "66세",
    "67세",
    "68세",
    "69세",
    "70세",
    "71세",
    "72세",
    "73세",
    "74세",
    "75세",
    "76세",
    "77세",
    "78세",
    "79세",
    "80세"
  ],
    "[GENDER]": ["남성", "여성"],
    "[HOSPITAL]": ["서울대학교병원", "삼성서울병원", "세브란스병원", "서울아산병원", "고려대학교안암병원", "한양대학교병원", "분당서울대학교병원", "서울성모병원", "강북삼성병원", "신촌세브란스병원", "이대목동병원", "건국대학교병원", "부산대학교병원", "전남대학교병원", "충북대학교병원", "경북대학교병원", "대구가톨릭대학교병원", "인하대학교병원", "울산대학교병원", "제주대학교병원"],
    "[SYMPTOM]": ["두통", "발열", "피로감", "구토", "식욕부진", "기침", "흉통", "관절통", "어지러움"],
    "[DIAGNOSIS]": [
        "고혈압", "당뇨병", "간암", "충수염", "뇌내출혈", "위염", "협심증", "천식", "골다공증", "백혈병"
    ],
    "[MEDICATION]": [
        "아세트아미노펜", "세프트리악손", "로라타딘", "아토르바스타틴", "메트포르민", "엔테카비르", "피타바스타틴"
    ],
    "[BODY_PART]": [
        "복부", "간 우엽", "기저핵", "이하선", "우하복부", "좌측 대퇴부", "우측 폐", "심장", "신장"
    ],
    "[BODY_STRUCTURE]": [
        "림프절", "혈관", "뇌실", "기관지", "요관", "척수", "담관", "폐포"
    ],
    "[TREATMENT]": [
        "복강경 수술", "조직검사", "항생제 투약", "재활치료", "경구 약물치료", "수액요법", "응급수술", "내시경"
    ],
    "[BODY_FUNCTION]": [
        "뇌압", "심박출량", "호흡수", "산소포화도", "혈압", "간기능", "심장박동"
    ],
    "[OCCUPATION]": [
        "초등학교 교사", "회사원", "약사", "건설노동자", "요양보호사", "간호조무사", "군인", "택배기사"
    ],
    "[ALLERGY]": [
        "고양이 털", "페니실린", "갑각류", "아스피린", "먼지 진드기", "라텍스", "계란 단백질"
    ]
}
# ------------------------

# ------------------------
# 샘플 텍스트 생성
def generate_sample_text():
    name = random.choice(direct_pools["[NAME]"])
    rrn = random.choice(direct_pools["[RRN]"])
    mrn = random.choice(direct_pools["[MEDICAL_ID]"])
    email = random.choice(direct_pools["[EMAIL]"])
    account = random.choice(direct_pools["[ACCOUNT_ID]"])

    age = random.choice(indirect_candidates['[AGE]'])
    gender = random.choice(indirect_candidates['[GENDER]'])
    symptom1 = random.choice(indirect_candidates['[SYMPTOM]'])
    symptom2 = random.choice(indirect_candidates['[SYMPTOM]'])
    while symptom1 == symptom2:
        symptom2 = random.choice(indirect_candidates['[SYMPTOM]'])
    
    hospital = random.choice(indirect_candidates['[HOSPITAL]'])
    diagnosis = random.choice(indirect_candidates['[DIAGNOSIS]'])
    treatment = random.choice(indirect_candidates['[TREATMENT]'])
    medication = random.choice(indirect_candidates['[MEDICATION]'])
    body_part = random.choice(indirect_candidates['[BODY_PART]'])
    body_structure = random.choice(indirect_candidates['[BODY_STRUCTURE]'])
    body_function = random.choice(indirect_candidates['[BODY_FUNCTION]'])
    occupation = random.choice(indirect_candidates['[OCCUPATION]'])
    allergy = random.choice(indirect_candidates['[ALLERGY]'])

    text = f""" 작성자 : {name} 기자
이메일 주소: {email}

[{hospital}]에서 치료를 받던 {age} {gender} 환자가 의료사고를 겪은 것으로 밝혀졌습니다. 
해당 환자는 2024년 3월 15일 입원 후 {symptom1}, {symptom2} 등의 증상을 보여 {name}에게 진료를 받았습니다.
의료진은 {diagnosis}로 판단하고 {treatment}을 시행하였으며, 이후 {medication} 투여가 이어졌습니다.

하지만 치료 과정 중 {body_part} 부위에서 이상 반응이 나타났고, 이후 검사 결과 일부 {body_structure} 손상이 발견되었습니다. 
병원 측은 2024년 3월 18일 퇴원 조치를 내렸으며, 현재는 후유증에 대한 법적 책임 여부를 두고 논의가 진행 중입니다.
해당 사건은 환자의 {body_function} 기능 저하와 관련해 논란이 확산되고 있습니다.
"""
    return text

# ------------------------
# 태깅 함수
def tag_text(text):
    output = text
    found_tags = set()

    # ✅ 직접식별자 태깅 (무조건): 긴 문자열 우선
    for tag, values in direct_pools.items():
        for v in sorted(values, key=len, reverse=True):
            output = output.replace(v, tag)

    # ✅ 간접식별자 종류 탐색
    for tag, values in indirect_candidates.items():
        if any(v in output for v in values):
            found_tags.add(tag)

    # ✅ 간접식별자 종류가 3종 이상일 경우 전체 태깅
    if len(found_tags) >= 3:
        for tag, values in indirect_candidates.items():
            for v in sorted(values, key=len, reverse=True):
                output = output.replace(v, tag)

    return output

# ------------------------
# 샘플 생성기
def generate_sample():
    input_text = generate_sample_text()
    output_text = tag_text(input_text)
    return {
        "inst": "다음 의무기록에서 직접식별자는 무조건, 간접식별자는 문장당 3개 이상 존재할 경우 태깅하시오.",
        "input": input_text.strip(),
        "output": output_text.strip()
    }

# ------------------------
# JSONL 저장기
def save_to_jsonl(samples, path="medical_samples_v4.jsonl"):
    with open(path, "w", encoding="utf-8") as f:
        for sample in samples:
            f.write(json.dumps(sample, ensure_ascii=False) + "\n")

# ------------------------
# 실행 예시
if __name__ == "__main__":
    samples = [generate_sample() for _ in range(50)]
    save_to_jsonl(samples)
    print("✅ 샘플 50개 생성 완료!")

    # 확인용 출력
    for s in samples[:3]:
        print("📌 Input:\n", s["input"])
        print("📌 Output:\n", s["output"])
        print("=" * 60)